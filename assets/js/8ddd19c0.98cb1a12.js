"use strict";(self.webpackChunkULI101=self.webpackChunkULI101||[]).push([[742],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),k=p(n),h=r,c=k["".concat(s,".").concat(h)]||k[h]||u[h]||o;return n?a.createElement(c,l(l({ref:t},m),{},{components:n})):a.createElement(c,l({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=k;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},6014:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p}});var a=n(3117),r=(n(7294),n(3905));const o={id:"tutorial12",title:"Tutorial 12 - Shell Scripting - Part 2",sidebar_position:11,description:"Tutorial 12 for Students to Learn Shell Scripting"},l="Objectives",i={unversionedId:"A-Tutorials/tutorial12",id:"A-Tutorials/tutorial12",title:"Tutorial 12 - Shell Scripting - Part 2",description:"Tutorial 12 for Students to Learn Shell Scripting",source:"@site/docs/A-Tutorials/tutorial12.md",sourceDirName:"A-Tutorials",slug:"/A-Tutorials/tutorial12",permalink:"/ULI101/A-Tutorials/tutorial12",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/ULI101/tree/main/docs/A-Tutorials/tutorial12.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"tutorial12",title:"Tutorial 12 - Shell Scripting - Part 2",sidebar_position:11,description:"Tutorial 12 for Students to Learn Shell Scripting"},sidebar:"courseNotesSidebar",previous:{title:"Tutorial 11 - Shell Scripting - Part 1",permalink:"/ULI101/A-Tutorials/tutorial11"},next:{title:"Tutorial 1 OLD - Using Your Matrix Server Account",permalink:"/ULI101/A-Tutorials/tutorial1old"}},s={},p=[{value:"ADDITIONAL SHELL SCRIPTING",id:"additional-shell-scripting",level:2},{value:"Main Objectives of this Practice Tutorial",id:"main-objectives-of-this-practice-tutorial",level:3},{value:"Tutorial Reference Material",id:"tutorial-reference-material",level:3},{value:"KEY CONCEPTS",id:"key-concepts",level:2},{value:"INVESTIGATION 1: ADDITIONAL LOGIC STATEMENTS",id:"investigation-1-additional-logic-statements",level:2},{value:"INVESTIGATION 2: ADDITIONAL LOOPING STATEMENTS",id:"investigation-2-additional-looping-statements",level:2},{value:"INVESTIGATION 3: exit AND break STATEMENTS",id:"investigation-3-exit-and-break-statements",level:2},{value:"INVESTIGATION 4: USING START-UP FILES",id:"investigation-4-using-start-up-files",level:2},{value:"FURTHER STUDY",id:"further-study",level:2},{value:"LINUX PRACTICE QUESTIONS",id:"linux-practice-questions",level:2}],m={toc:p};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"objectives"},"Objectives"),(0,r.kt)("p",null,"Additional Shell Scripting:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if - elif - else statement"),(0,r.kt)("li",{parentName:"ul"},"for loop revisited"),(0,r.kt)("li",{parentName:"ul"},"while loop statement"),(0,r.kt)("li",{parentName:"ul"},"Error-Checking with Loops"),(0,r.kt)("li",{parentName:"ul"},"exit and break Statements"),(0,r.kt)("li",{parentName:"ul"},"export Command"),(0,r.kt)("li",{parentName:"ul"},"Start-up Files"),(0,r.kt)("li",{parentName:"ul"},"Further Study")),(0,r.kt)("h1",{id:"tutorial-12-shell-scripting---part-2"},"Tutorial 12: Shell Scripting - Part 2"),(0,r.kt)("h2",{id:"additional-shell-scripting"},"ADDITIONAL SHELL SCRIPTING"),(0,r.kt)("h3",{id:"main-objectives-of-this-practice-tutorial"},"Main Objectives of this Practice Tutorial"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use the ",(0,r.kt)("strong",{parentName:"li"},"if-elif-else")," control flow statement in a shell script."),(0,r.kt)("li",{parentName:"ul"},"Use the ",(0,r.kt)("strong",{parentName:"li"},"for")," loop control using a list with ",(0,r.kt)("strong",{parentName:"li"},"command substitution"),"."),(0,r.kt)("li",{parentName:"ul"},"Use the ",(0,r.kt)("strong",{parentName:"li"},"while")," loop in a shell script."),(0,r.kt)("li",{parentName:"ul"},"Use the ",(0,r.kt)("strong",{parentName:"li"},"exit")," and ",(0,r.kt)("strong",{parentName:"li"},"break")," statements in a shell script."),(0,r.kt)("li",{parentName:"ul"},"Explain how to configure and use a ",(0,r.kt)("strong",{parentName:"li"},".bashrc")," start-up file.")),(0,r.kt)("h3",{id:"tutorial-reference-material"},"Tutorial Reference Material"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"th"},"Course Notes")),(0,r.kt)("th",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"th"},"Linux Command/Shortcut Reference")),(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"th"},"YouTube Videos")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Slides:")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Control Flow Statements:")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Additional Statements:")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Startup Files:")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Instructional Videos:"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"- Week 12 Lecture 1 Notes:"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://www.tutorialspoint.com/unix/if-else-statement.htm"},"if-elif-else")),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://www.geeksforgeeks.org/exit-command-in-linux-with-examples/#:~:text=exit%20command%20in%20linux%20is,last%20command%20that%20is%20executed.&text=After%20pressing%20enter%2C%20the%20terminal%20will%20simply%20close."},"exit")),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html"},"Purpose")),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://www.youtube.com/watch?v=XVTwbINXnk4&list=PLU1b1f-2Oe90TuYfifnWulINjMv_Wr16N&index=6"},"Bash Shell Scripting - Part 2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/ULI101/slides/raw/main/ULI101-12.1.pdf"},"PDF")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/ULI101/slides/raw/main/ULI101-12.1.pptx"},"PPTX")),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://www.cyberciti.biz/faq/bash-for-loop/#:~:text=A%20'for%20loop'%20is%20a,files%20using%20a%20for%20loop."},"for Loop")),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://www.geeksforgeeks.org/break-command-in-linux-with-examples/#:~:text=break%20command%20is%20used%20to,The%20default%20number%20is%201."},"break")),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"http://www.linuxfromscratch.org/blfs/view/svn/postlfs/profile.html"},"Examples")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"- ",(0,r.kt)("a",{parentName:"td",href:"https://bash.cyberciti.biz/guide/While_loop"},"while Loop")),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})))),(0,r.kt)("h2",{id:"key-concepts"},"KEY CONCEPTS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"IF-ELIF-ELSE STATEMENT")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"elif")," statement can be used to perform additional conditional tests of the previous test condition tests ",(0,r.kt)("strong",{parentName:"p"},"FALSE"),". This statement is used to make your logic control-flow statement to be more adaptable."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"How it Works:")),(0,r.kt)("p",null,"If the test condition returns a ",(0,r.kt)("strong",{parentName:"p"},"TRUE")," value, then the Linux Commands between\n",(0,r.kt)("strong",{parentName:"p"},"then")," and ",(0,r.kt)("strong",{parentName:"p"},"else")," statements are executed."),(0,r.kt)("p",null,"If the test returns a ",(0,r.kt)("strong",{parentName:"p"},"FALSE")," value, then ",(0,r.kt)("strong",{parentName:"p"},"a new condition is tested again"),",\nand action is taken if the result is ",(0,r.kt)("strong",{parentName:"p"},"TRUE"),", then the Linux Commands between\n",(0,r.kt)("strong",{parentName:"p"},"then")," and ",(0,r.kt)("strong",{parentName:"p"},"else")," statements are executed. ",(0,r.kt)("strong",{parentName:"p"},"Additional elif statements")," can be used if additional conditional testing is required . Eventually, an action will be taken when the final test condition is ",(0,r.kt)("strong",{parentName:"p"},"FALSE"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"If elif else",src:n(7567).Z,width:"680",height:"592"})),(0,r.kt)("p",null,"Example of how an ",(0,r.kt)("strong",{parentName:"p"},"if-elif-else")," statement works. (Image licensed under ",(0,r.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by-sa/3.0/"},"cc"),")"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"num1=5\nnum2=10\nif test $num1 \u2013lt $num2\nthen\n   echo \u201cLess Than\u201d\nelif test $num1 \u2013gt $num2\nthen\n   echo \u201cGreater Than\u201d\nelse    echo \u201cEqual to\u201d\nfi\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"FOR LOOP USING COMMAND SUBSTITUTION")),(0,r.kt)("p",null,"Let\u2019s issue the ",(0,r.kt)("strong",{parentName:"p"},"for")," loop with a ",(0,r.kt)("strong",{parentName:"p"},"list")," using ",(0,r.kt)("strong",{parentName:"p"},"command substitution"),".\nIn the example below, we will use command substitution to issue the ls command and\nhave that output (filenames) become arguments for the for loop."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"for x in $(ls)\ndo\n   echo \u201cThe item is: $x\u201d\ndone\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WHILE LOOP")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"while")," loop is useful to loop based on the result from a test condition or command result.\nThis type of loop is very useful for ",(0,r.kt)("strong",{parentName:"p"},"error-checking"),"."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"How it Works:"),"\n",(0,r.kt)("em",{parentName:"p"},"The condition/expression is evaluated, and if the condition/expression is ",(0,r.kt)("strong",{parentName:"em"},"TRUE"),",\nthe code within \u2026 the block is executed. This repeats until the condition/expression becomes ",(0,r.kt)("strong",{parentName:"em"},"FALSE"),"."),"\nReference: ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/While_loop"},"https://en.wikipedia.org/wiki/While_loop")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"While loop",src:n(7895).Z,width:"470",height:"572"})),(0,r.kt)("p",null,"Example of how a while loop works. (Image licensed under ",(0,r.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by-sa/3.0/"},"cc"),")"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"answer=10\nread \u2013p \u201cpick a number between 1 and 10: \u201c guess\nwhile test $guess \u2013eq 10\ndo    read \u2013p \u201cTry again: \u201c guess\ndone\necho \u201cYou are correct\u201d\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'value=1\nwhile [ $value -le 5 ]\ndo\n  echo "$value"\n  ((value=value+1)) # could also use ((value++))\ndone\n1\n2\n3\n4\n5\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"EXIT & BREAK STATEMENTS")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"exit Statement")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"exit")," statement is used to ",(0,r.kt)("strong",{parentName:"p"},"terminate")," a shell script.\nThis statement is very useful when combined with logic in a shell script.\nThe exit command can contain an argument to provide the exit status of your shell script."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'if [ $# -ne 1 ]\nthen\n  echo "USAGE: $0 [arg]"\n  exit 1\nfi\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"break Statement")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"break")," statement is used to ",(0,r.kt)("strong",{parentName:"p"},"terminate a loop"),".\nAlthough the loop terminates, the shell script will continue running."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'read -p "Enter a number: " number\nwhile [ $number -ne 5 ]\ndo\n   read -p "Try again. Enter a number: " number\n   if [ $number -eq 5 ]\n   then\n     break\n   fi\ndone\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"START-UP FILES")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Shell configuration (start-up) files")," are ",(0,r.kt)("strong",{parentName:"p"},"scripts")," that are run when you log in, log out, or start a new shell.\nThe start-up files can be used, for example, to ",(0,r.kt)("strong",{parentName:"p"},"set the prompt and screen display"),", ",(0,r.kt)("strong",{parentName:"p"},"create local variables"),",\nor create temporary Linux commands (",(0,r.kt)("strong",{parentName:"p"},"aliases"),")"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"/etc/profile")," file belongs to the root user and is the first start-up file that executes when you log in, regardless of shell."),(0,r.kt)("p",null,"User-specific config start-up files are in the user's home directory:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"~/.bash_profile")," runs when you log in."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"~/.bashrc")," runs when you start an interactive Bash shell.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Logout Files")),(0,r.kt)("p",null,"There is a file that ",(0,r.kt)("strong",{parentName:"p"},"resets or restores the shell environment")," (including shut-down of programs running in the shell) when the user logs out of their shell. User-specific logout start-up files are in the user's home directory: ",(0,r.kt)("strong",{parentName:"p"},"~/.bash_logout")),(0,r.kt)("h2",{id:"investigation-1-additional-logic-statements"},"INVESTIGATION 1: ADDITIONAL LOGIC STATEMENTS"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ATTENTION:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This online tutorial will be required to be completed by Friday in week 13 by midnight to obtain a grade of 2% towards this course")),(0,r.kt)("p",null,"In this investigation, you will learn additional control-flow statements to allow your shell scripts to be even ",(0,r.kt)("strong",{parentName:"p"},"more adaptable"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perform the Following Steps:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Login")," to your matrix account."),(0,r.kt)("li",{parentName:"ol"},"Issue a command to ",(0,r.kt)("strong",{parentName:"li"},"confirm")," you are located in your home directory."),(0,r.kt)("li",{parentName:"ol"},"Issue a Linux command to create a directory called ",(0,r.kt)("strong",{parentName:"li"},"advanced")),(0,r.kt)("li",{parentName:"ol"},"Issue a Linux command to change to the ",(0,r.kt)("strong",{parentName:"li"},"advanced")," directory."),(0,r.kt)("li",{parentName:"ol"},"Issue a Linux command to confirm you are located in the ",(0,r.kt)("strong",{parentName:"li"},"advanced")," directory.")),(0,r.kt)("p",null,"In ",(0,r.kt)("strong",{parentName:"p"},"tutorial 10"),", you learned how to use the ",(0,r.kt)("strong",{parentName:"p"},"if")," control-flow statement. You will now learn to use the ",(0,r.kt)("strong",{parentName:"p"},"if-else")," statement\nto take two different actions based on if the condition tests either TRUE or FALSE."),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"if-4.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi if-4.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in your shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\nclear\nread -p "Enter the first number: " num1\nread -p "Enter the second number: " num2\nif [ $num1 -gt $num2 ]\nthen\n   echo "The first number is greater than the second number."\nelif [ $num1 -lt $num2 ]\nthen\n   echo "The first number is less than the second number."\nelse\n   echo "The first number is equal to the second number."\nfi\n')),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue the following linux command to add execute permissions for your shell script:"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"chmod u+x if-4.bash")),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},"Run your shell script by issuing: ",(0,r.kt)("inlineCode",{parentName:"li"},"./if-4.bash"))),(0,r.kt)("p",null,"Try running the script several times with numbers different and equal to each other\nto confirm that the shell script works correctly."),(0,r.kt)("p",null,"A classic shell script to demonstrate many different paths or actions to take depending of multiple testing\nusing an ",(0,r.kt)("strong",{parentName:"p"},"if-elif-else")," statement would be a ",(0,r.kt)("strong",{parentName:"p"},"mark to letter grade converter"),"."),(0,r.kt)("ol",{start:11},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"if-5.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi if-5.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in your shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\nclear\nread -p "Enter a mark (0-100): " mark\nif [ $mark -ge 80 ]\nthen\n   echo "You received an A grade."\nelif [ $mark -ge 70 ]\nthen\n   echo "You received a B grade."\nelif [ $mark -ge 60 ]\nthen\n   echo "You received a C grade."\nelif [ $mark -ge 50 ]\nthen\n   echo "You received a D grade."\nelse\n   echo "You received an F grade."\nfi\n')),(0,r.kt)("ol",{start:13},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue the following linux command to add execute permissions for your shell script:"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"chmod u+x if-5.bash")),(0,r.kt)("ol",{start:15},(0,r.kt)("li",{parentName:"ol"},"Run your shell script by issuing: ",(0,r.kt)("inlineCode",{parentName:"li"},"./if-5.bash"))),(0,r.kt)("p",null,"What do you notice? Run several times to confirm that the shell script runs correctly for all mark (grade) categories."),(0,r.kt)("ol",{start:16},(0,r.kt)("li",{parentName:"ol"},"Issue the following to run a checking script:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"~uli101/week12-check-1")),(0,r.kt)("ol",{start:17},(0,r.kt)("li",{parentName:"ol"},"If you encounter errors, make corrections and ",(0,r.kt)("strong",{parentName:"li"},"re-run")," the checking script until you\nreceive a congratulations message, then you can proceed.")),(0,r.kt)("p",null,"In the next investigation, you will learn more about the ",(0,r.kt)("strong",{parentName:"p"},"for")," loop and learn how to use the ",(0,r.kt)("strong",{parentName:"p"},"while")," loop for ",(0,r.kt)("strong",{parentName:"p"},"error-checking.")),(0,r.kt)("h2",{id:"investigation-2-additional-looping-statements"},"INVESTIGATION 2: ADDITIONAL LOOPING STATEMENTS"),(0,r.kt)("p",null,"In this investigation, you will learn more about the ",(0,r.kt)("strong",{parentName:"p"},"for")," loop and learn how to use the ",(0,r.kt)("strong",{parentName:"p"},"while")," loop for ",(0,r.kt)("strong",{parentName:"p"},"error-checking"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perform the Following Steps:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue a Linux command to confirm you are located in your ",(0,r.kt)("strong",{parentName:"p"},"advanced")," directory in your Matrix account.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue the following Linux command to view the ",(0,r.kt)("strong",{parentName:"p"},"~/for-1.bash")," file:"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"more ~/for-1.bash")),(0,r.kt)("p",null,"As you should have noticed from ",(0,r.kt)("strong",{parentName:"p"},"tutorial 10")," that the ",(0,r.kt)("strong",{parentName:"p"},"for")," loop can use a ",(0,r.kt)("strong",{parentName:"p"},"list"),".\nYou can also use the for loop with positional parameters stored as ",(0,r.kt)("strong",{parentName:"p"},"arguments"),"\nfrom an executed shell script."),(0,r.kt)("p",null,"You can also use the ",(0,r.kt)("strong",{parentName:"p"},"for")," loop with a list using ",(0,r.kt)("strong",{parentName:"p"},"command substitution"),".\nUsing command sustitution is an effective method to loop within a shell script."),(0,r.kt)("p",null,"Before creating a new shell script, let's learn to use command substitution from the Bash Shell\nto store arguments as positional parameters and use them for practice."),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Issue the following linux command to set positional parameters in your current shell:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"set apples oranges bananas pears")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Issue the following linux command:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $#")),(0,r.kt)("p",null,"What do you notice? What does this value represent?"),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Issue the following linux command:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $*")),(0,r.kt)("p",null,"What do you notice?"),(0,r.kt)("p",null,"These positional parameters can be used with a for loop. To simplify things,\nlet's create another shell script that uses ",(0,r.kt)("strong",{parentName:"p"},"command substitution")," within a ",(0,r.kt)("strong",{parentName:"p"},"for")," loop."),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"li"},"for-3.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"vi for-3.bash"),")"),(0,r.kt)("li",{parentName:"ol"},"Enter the following lines in your shell script:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\nclear\nset 10 9 8 7 6 5 4 3 2 1\nfor x\ndo\n   echo $x\ndone\necho "blast-off!"\n')),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add execute permissions")," for the owner of this script and ",(0,r.kt)("strong",{parentName:"p"},"run this Bash shell script"),"."))),(0,r.kt)("p",null,"What do you notice?"),(0,r.kt)("p",null,"Let's create another shell script to ",(0,r.kt)("strong",{parentName:"p"},"run a loop for each file")," that is contained in your current directory using ",(0,r.kt)("strong",{parentName:"p"},"command substitution"),"."),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"for-4.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi for-4.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in your shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\nclear\nset $(ls)\necho "Here are files in my current directory:"\necho\nfor x\ndo\n   echo "    $x"\ndone\n')),(0,r.kt)("ol",{start:12},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add execute permissions")," and ",(0,r.kt)("strong",{parentName:"p"},"run")," this Bash shell script."))),(0,r.kt)("p",null,"What do you notice?"),(0,r.kt)("p",null,"We can reduce a line in our shell script by using ",(0,r.kt)("strong",{parentName:"p"},"command substitution")," in the for loop instead of using\nthe ",(0,r.kt)("strong",{parentName:"p"},"set")," command. Let's demonstrate this in another shell script."),(0,r.kt)("ol",{start:14},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"for-5.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi for-5.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in your shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\nclear\necho "Here are files in my current directory:"\necho\nfor x in $(ls)\ndo\n   echo "    $x"\ndone\n')),(0,r.kt)("ol",{start:16},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add execute permissions")," for this shell script and ",(0,r.kt)("strong",{parentName:"p"},"run Bash shell script"),"\nWhat do you notice? Does the output for this shell script differ from ",(0,r.kt)("strong",{parentName:"p"},"for-4.bash"),"? Why?"))),(0,r.kt)("p",null,"We now want to introduce you to the use of ",(0,r.kt)("strong",{parentName:"p"},"error-checking.")),(0,r.kt)("ol",{start:18},(0,r.kt)("li",{parentName:"ol"},"Use the ",(0,r.kt)("strong",{parentName:"li"},"more")," command to view the previously-created Bash shell script ",(0,r.kt)("strong",{parentName:"li"},"~/if-5.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"more ~/if-5.bash"),")")),(0,r.kt)("p",null,"Take a few moments to re-familiarize yourself with this shell script"),(0,r.kt)("ol",{start:19},(0,r.kt)("li",{parentName:"ol"},"Run your shell script by issuing: ",(0,r.kt)("inlineCode",{parentName:"li"},"~/if-5.bash"))),(0,r.kt)("p",null,"When prompted, enter a ",(0,r.kt)("strong",{parentName:"p"},"letter")," instead of a ",(0,r.kt)("em",{parentName:"p"},"number"),". What happens?"),(0,r.kt)("p",null,"Let's edit the ",(0,r.kt)("strong",{parentName:"p"},"for-5.bash")," shell script to perform ",(0,r.kt)("strong",{parentName:"p"},"error-checking")," to force the user to enter a numeric value between ",(0,r.kt)("strong",{parentName:"p"},"0")," and ",(0,r.kt)("strong",{parentName:"p"},"100"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," The ",(0,r.kt)("strong",{parentName:"p"},"while")," statement can be used with the ",(0,r.kt)("strong",{parentName:"p"},"test")," command (or a simple linux command or a linux pipeline command) for error checking. In our case, we will use a pipeline command with extended regular expressions. In order to loop while the result is TRUE (not FALSE), you can use the negation symbol (!) to set the test condition to the opposite."),(0,r.kt)("ol",{start:20},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to edit the text file called ",(0,r.kt)("strong",{parentName:"p"},"~/if-5.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi ~/if-5.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following lines in your shell script IMMEDIATELY AFTER the read statement to prompt the user for a mark:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'while ! echo $mark | egrep "^[0-9]{1,}$" > /dev/null 2> /dev/null\ndo\n   read -p "Not a valid number. Enter a mark (0-100): " mark\ndone\n')),(0,r.kt)("ol",{start:22},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run your shell script by issuing:"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./if-5.bash"),(0,r.kt)("strong",{parentName:"p"},"\nletter")),(0,r.kt)("ol",{start:24},(0,r.kt)("li",{parentName:"ol"},"When prompted, enter a ",(0,r.kt)("strong",{parentName:"li"},"letter")," instead of a number. What happens?")),(0,r.kt)("p",null,"Does the shell script allow you to enter an invalid grade like ",(0,r.kt)("strong",{parentName:"p"},"200")," or ",(0,r.kt)("strong",{parentName:"p"},"-6"),"?"),(0,r.kt)("p",null,"Let's add an ",(0,r.kt)("strong",{parentName:"p"},"additional error-checking loop")," to force the user to enter a number between ",(0,r.kt)("strong",{parentName:"p"},"0")," and ",(0,r.kt)("strong",{parentName:"p"},"100"),"."),(0,r.kt)("p",null,"Compound operators like ",(0,r.kt)("strong",{parentName:"p"},"&&")," and ",(0,r.kt)("strong",{parentName:"p"},"|","|")," can be used with the test command.\nLet's use the ",(0,r.kt)("strong",{parentName:"p"},"|","|")," compound criteria to to NOT accept numbers ",(0,r.kt)("strong",{parentName:"p"},"outside")," of the range ",(0,r.kt)("strong",{parentName:"p"},"0")," to ",(0,r.kt)("strong",{parentName:"p"},"100"),"."),(0,r.kt)("ol",{start:25},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to edit the text file called ",(0,r.kt)("strong",{parentName:"p"},"~/if-5.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi ~/if-5.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following lines in your shell script IMMEDIATELY AFTER the PREVIOUSLY ADDED error-checking ",(0,r.kt)("strong",{parentName:"p"},"while")," loop statement to ",(0,r.kt)("strong",{parentName:"p"},"force")," the user to enter a valid number (between 1 and 100):"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'while [ $mark -lt 0 ] || [ $mark -gt 100 ]\ndo\n   read -p "Invalid number range. Enter a mark (0-100): " mark\ndone\n')),(0,r.kt)("ol",{start:27},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run your shell script by issuing:"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"~/if-5.bash")),(0,r.kt)("ol",{start:29},(0,r.kt)("li",{parentName:"ol"},"When prompted, enter a ",(0,r.kt)("strong",{parentName:"li"},"letter")," instead of a number. What happens?\nDoes the shell script allow you to enter an ",(0,r.kt)("strong",{parentName:"li"},"invalid grade")," like ",(0,r.kt)("strong",{parentName:"li"},"200")," or ",(0,r.kt)("strong",{parentName:"li"},"-6"),"?")),(0,r.kt)("p",null,"Let's reinforce ",(0,r.kt)("strong",{parentName:"p"},"math operations")," in a shell script (that you created in ",(0,r.kt)("strong",{parentName:"p"},"tutorial 10"),") and then incorporate math operations within a loop."),(0,r.kt)("ol",{start:30},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"for-6.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi for-6.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in your shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\nvalue=1\nwhile [ $value -le 5 ]\ndo\n  echo "$value"\n  value=value+1\ndone\n')),(0,r.kt)("ol",{start:32},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set execute permissions for this shell script and run your shell script by issuing: ",(0,r.kt)("inlineCode",{parentName:"p"},"./for-6.bash")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"You should have noticed an error message.")),(0,r.kt)("ol",{start:34},(0,r.kt)("li",{parentName:"ol"},"To demonstrate what went wrong, issue the following ",(0,r.kt)("strong",{parentName:"li"},"commands"),":")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"num1=5;num2=10")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"result=$num1+$num2")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $result")),(0,r.kt)("p",null,'Notice that the user-defined variable stores the text "',(0,r.kt)("strong",{parentName:"p"},"10+5"),'" which is NOT the expected result of adding the number ',(0,r.kt)("strong",{parentName:"p"},"10")," and ",(0,r.kt)("strong",{parentName:"p"},"5"),"."),(0,r.kt)("p",null,"As you may recall in ",(0,r.kt)("strong",{parentName:"p"},"tutorial 10"),", we need to convert a number stored as text into a ",(0,r.kt)("strong",{parentName:"p"},"binary number"),"\nfor calculations (in this case, advance the value by 1 for each loop).\nWe can accomplish this by using the math construct ",(0,r.kt)("strong",{parentName:"p"},"(( ))")),(0,r.kt)("ol",{start:35},(0,r.kt)("li",{parentName:"ol"},"To demonstrate, issue the following set of ",(0,r.kt)("strong",{parentName:"li"},"commands"),":")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"num1=5;num2=10")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sum=$(($num1+$num2))")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $sum")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"((product=$num1*$num2))")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $product")),(0,r.kt)("p",null,"Let's correct our ",(0,r.kt)("strong",{parentName:"p"},"for-6.bash")," shell script to correctly use math operations."),(0,r.kt)("ol",{start:36},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to edit the text file called ",(0,r.kt)("strong",{parentName:"p"},"for-6.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi for-6.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Edit ",(0,r.kt)("strong",{parentName:"p"},"line 6")," and replace with the following:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"((value=value+1))\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," For those familiar with other programming languages, you can achieve the same results by using: ",(0,r.kt)("strong",{parentName:"p"},"((value++))")),(0,r.kt)("ol",{start:38},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Run")," this Bash shell script again."))),(0,r.kt)("p",null,"What do you notice this time?"),(0,r.kt)("ol",{start:40},(0,r.kt)("li",{parentName:"ol"},"Issue the following to run a checking script:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"~uli101/week12-check-2")),(0,r.kt)("ol",{start:41},(0,r.kt)("li",{parentName:"ol"},"If you encounter errors, make corrections and ",(0,r.kt)("strong",{parentName:"li"},"re-run")," the checking script until you\nreceive a congratulations message, then you can proceed.")),(0,r.kt)("p",null,"In the next investigation, you will learn to use the ",(0,r.kt)("strong",{parentName:"p"},"exit")," statement to ",(0,r.kt)("strong",{parentName:"p"},"terminate the execution of a shell script"),"\nif not run with the properly number of arguments and use the ",(0,r.kt)("strong",{parentName:"p"},"break")," statement that will ",(0,r.kt)("strong",{parentName:"p"},"terminate a loop"),"\nbut NOT terminate the running of the shell script."),(0,r.kt)("h2",{id:"investigation-3-exit-and-break-statements"},"INVESTIGATION 3: exit AND break STATEMENTS"),(0,r.kt)("p",null,"In this investigation, you will learn to use the ",(0,r.kt)("strong",{parentName:"p"},"exit")," and ",(0,r.kt)("strong",{parentName:"p"},"break")," statements in your shell scripts."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"THE EXIT STATEMENT")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"exit")," statement is used to terminate a shell script.\nThis statement is very useful when combined with logic in a shell script to display an ",(0,r.kt)("strong",{parentName:"p"},"error message"),"\nif the command was ",(0,r.kt)("strong",{parentName:"p"},"improperly executed")," and ",(0,r.kt)("strong",{parentName:"p"},"terminate")," the running of the shell script."),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"exit")," command can contain return a ",(0,r.kt)("em",{parentName:"p"},"value")," to provide the ",(0,r.kt)("strong",{parentName:"p"},"exit status"),"\nof your shell script (i.e. TRUE or FALSE value)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perform the Following Steps:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make certain that you are logged into matrix account.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Confirm that you are currently located in the ",(0,r.kt)("strong",{parentName:"p"},"advanced")," directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"exit.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi exit.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in the exit.bash shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\n\nif [ $# -ne 1 ]\nthen\n  echo "USAGE: $0 [arg]" >&2\n  exit 1\nfi\n\necho "The argument is: $1"\n')),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add execute permissions")," for this Bash shell script.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue the following command (without arguments):"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./exit.bash")),(0,r.kt)("p",null,"What did you notice?"),(0,r.kt)("p",null,"Since there are no arguments, the test within the running shell script returns FALSE,\nthen an ",(0,r.kt)("strong",{parentName:"p"},"error message")," with feedback of how to properly issue the shell script with an argument\nand then ",(0,r.kt)("strong",{parentName:"p"},"terminates")," the Bash shell script."),(0,r.kt)("p",null,"Notice that the ",(0,r.kt)("strong",{parentName:"p"},"$0")," positional parameter displays the ",(0,r.kt)("strong",{parentName:"p"},"name")," of the currently running shell script\nin the USAGE message. This is useful in case you decide to ",(0,r.kt)("strong",{parentName:"p"},"change")," the ",(0,r.kt)("em",{parentName:"p"},"name")," of the shell script at a later time."),(0,r.kt)("p",null,"The symbol ",(0,r.kt)("strong",{parentName:"p"},">","&2")," redirects ",(0,r.kt)("strong",{parentName:"p"},"standard output")," from the USAGE message\nto ",(0,r.kt)("strong",{parentName:"p"},"standard error"),' making like a real error message.\nThis "',(0,r.kt)("em",{parentName:"p"},"neat redirection trick"),'" will NOT be considered for evaluation for this coverage.'),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Issue the following Linux command:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $?")),(0,r.kt)("p",null,"What does this ",(0,r.kt)("strong",{parentName:"p"},"exit status")," from the previously issued command indicate?"),(0,r.kt)("ol",{start:9},(0,r.kt)("li",{parentName:"ol"},"Issue the following command (with an argument):")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./exit.bash uli101")),(0,r.kt)("p",null,"What did you notice this time?"),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},"Issue the following Linux command:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $?")),(0,r.kt)("p",null,"What does this ",(0,r.kt)("strong",{parentName:"p"},"exit status")," from the previously issued command indicate?"),(0,r.kt)("ol",{start:11},(0,r.kt)("li",{parentName:"ol"},"Issue the following command (with two arguments and redirecting stderr to a file):")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./exit.bash uli101 Linux 2> error.txt")),(0,r.kt)("p",null,"What did you notice this time?"),(0,r.kt)("ol",{start:12},(0,r.kt)("li",{parentName:"ol"},"Issue the following Linux command:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"echo $?")),(0,r.kt)("ol",{start:13},(0,r.kt)("li",{parentName:"ol"},"Issue the following Linux command to confirm that stderr was redirected to a file:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cat error.txt")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"THE BREAK STATEMENT")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"break")," statement is used to ",(0,r.kt)("strong",{parentName:"p"},"terminate")," a ",(0,r.kt)("strong",{parentName:"p"},"loop")," without\nterminating the running shell script."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perform the Following Steps:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make certain that you are logged into matrix account.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Confirm that you are currently located in the ",(0,r.kt)("strong",{parentName:"p"},"advanced")," directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"break-1.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi break-1.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in the ",(0,r.kt)("strong",{parentName:"p"},"break-1.bash")," shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\n\nread -p "Enter an integer: " number\n\nwhile ! echo $number | egrep "^[0-9]{1,}$" > /dev/null 2> /dev/null || [ $number -ne 5 ] 2> /dev/null\ndo\n  if [ $number -eq 5 ] 2> /dev/null\n  then\n     break\n  fi\n  read -p "Try again. Enter a valid integer: " number\ndone\n\necho "The number is: $number"\n')),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add execute permissions")," for this Bash shell script.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue the following command (without arguments):"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./break-1.bash")),(0,r.kt)("p",null,"When prompted, enter several ",(0,r.kt)("strong",{parentName:"p"},"invalid")," and ",(0,r.kt)("strong",{parentName:"p"},"valid")," integers. Then enter ",(0,r.kt)("strong",{parentName:"p"},"valid integers")," NOT containing the value of ",(0,r.kt)("strong",{parentName:"p"},"5"),".\nFinally, enter the integer with the value of ",(0,r.kt)("strong",{parentName:"p"},"5"),"."),(0,r.kt)("p",null,"What happens?"),(0,r.kt)("p",null,"Let's use the ",(0,r.kt)("strong",{parentName:"p"},"break")," statement with the ",(0,r.kt)("strong",{parentName:"p"},"for")," loop."),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"p"},"break-2.bash")," (eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"vi break-2.bash"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following lines in the ",(0,r.kt)("strong",{parentName:"p"},"break-2.bash")," shell script:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\n\nfor x\ndo\n\n  if [ $x = "uli101" ]\n  then\n     break\n  fi\n  echo "Argument is: $x"\ndone\n\necho\necho "Shell script has been completed"\n')),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"p"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"p"},":x")," followed by ",(0,r.kt)("strong",{parentName:"p"},"ENTER"),").")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Add execute permissions")," for this Bash shell script.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue the following command (with arguments):"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"./break-2.bash hwd101 ipc144 uli101 apc100")),(0,r.kt)("p",null,"What do you notice? How come ",(0,r.kt)("strong",{parentName:"p"},"uli101")," and ",(0,r.kt)("strong",{parentName:"p"},"apc100")," are NOT displayed\nbut a message appeared at the end of the script that the script completed?"),(0,r.kt)("ol",{start:13},(0,r.kt)("li",{parentName:"ol"},"Issue the following to run a checking script:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"~uli101/week12-check-3")),(0,r.kt)("ol",{start:14},(0,r.kt)("li",{parentName:"ol"},"If you encounter errors, make corrections and ",(0,r.kt)("strong",{parentName:"li"},"re-run")," the checking script until you\nreceive a congratulations message, then you can proceed.")),(0,r.kt)("p",null,"In the next investigation, we will learn to create / modify ",(0,r.kt)("strong",{parentName:"p"},"startup files"),"\nto customize your Linux shell environment."),(0,r.kt)("h2",{id:"investigation-4-using-start-up-files"},"INVESTIGATION 4: USING START-UP FILES"),(0,r.kt)("p",null,"In this investigation, you will learn how to ",(0,r.kt)("strong",{parentName:"p"},"customize")," your ",(0,r.kt)("strong",{parentName:"p"},"Bash Linux shell environment"),"\nby creating and testing a ",(0,r.kt)("strong",{parentName:"p"},"start-up")," file."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Perform the Following Steps:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue a Linux command to change to your ",(0,r.kt)("strong",{parentName:"p"},"home")," directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Issue a Linux command to confirm you are located in the ",(0,r.kt)("strong",{parentName:"p"},"home")," directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use the ",(0,r.kt)("strong",{parentName:"p"},"more")," command to view the contents of the ",(0,r.kt)("strong",{parentName:"p"},"default start-up")," file called ",(0,r.kt)("strong",{parentName:"p"},"/etc/profile")))),(0,r.kt)("p",null,"This file contains the ",(0,r.kt)("strong",{parentName:"p"},"default settings")," when you open your Bourne shell (eg. if issuing the command ",(0,r.kt)("strong",{parentName:"p"},"sh"),")."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Use the ",(0,r.kt)("strong",{parentName:"li"},"more")," command to view the contents of the start-up file called ",(0,r.kt)("strong",{parentName:"li"},"/etc/bashrc"))),(0,r.kt)("p",null,"This file contains the ",(0,r.kt)("strong",{parentName:"p"},"default settings")," when you ",(0,r.kt)("strong",{parentName:"p"},"open your Bash shell")," (eg. if issuing the command ",(0,r.kt)("strong",{parentName:"p"},"bash"),")."),(0,r.kt)("p",null,"Since we are using the ",(0,r.kt)("strong",{parentName:"p"},"Bash shell")," by default, let's create a ",(0,r.kt)("strong",{parentName:"p"},"customized Bash start-up file"),".\nThis startup file is located in your ",(0,r.kt)("strong",{parentName:"p"},"home"),' directory using the name "',(0,r.kt)("strong",{parentName:"p"},".bash_profile"),'"'),(0,r.kt)("p",null,"Let's move your ",(0,r.kt)("strong",{parentName:"p"},".bash_profile")," file to prevent ",(0,r.kt)("strong",{parentName:"p"},"accidental overwrite"),"."),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Issue the following linux command:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mv ~/.bash_profile ~/.bash_profile.bk")),(0,r.kt)("p",null,'If you experience an error message "',(0,r.kt)("em",{parentName:"p"},"No such file or directory"),'",\njust ignore this command since there is no ',(0,r.kt)("strong",{parentName:"p"},"~/.bash_profile")," file in your home directory."),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Use a text editor like vi or nano to create the text file called ",(0,r.kt)("strong",{parentName:"li"},"~/.bash_profile")," (eg. ",(0,r.kt)("inlineCode",{parentName:"li"},"vi ~/.bash_profile"),")")),(0,r.kt)("p",null,"If you are using the nano text editor, refer to notes on text editing in a previous week in the course schedule."),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},'Enter the following lines in your shell script (the symbol "',"[",'" is the open square bracket symbol):')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'clear\necho -e -n "\\e[0;34m"\necho "Last Time Logged in (for security):"\necho\nlastlog -u $USER\necho\necho -e -n "\\e[m"\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," You will notice there is ",(0,r.kt)("strong",{parentName:"p"},"NO she-bang line")," since this is a ",(0,r.kt)("strong",{parentName:"p"},"start-up")," file."),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"Save your editing session and exit the text editor (eg. with vi: press ",(0,r.kt)("strong",{parentName:"li"},"ESC"),", then type ",(0,r.kt)("strong",{parentName:"li"},":x")," followed by ",(0,r.kt)("strong",{parentName:"li"},"ENTER"),").")),(0,r.kt)("p",null,"You can test run the startup file without exiting and re-entering your Bash shell environment. Issue the following:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},". ~/.bash_profile")),(0,r.kt)("p",null,"What do you notice?"),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Exit")," your current Bash shell session.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Login")," again to your matrix account."))),(0,r.kt)("p",null,"Did you start-up file customize your Bash shell environment with colours?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," This is where you can make your Linux shell environment values ",(0,r.kt)("strong",{parentName:"p"},"persistent"),"\n(i.e. saved regardless of exit and login to your Bash Shell such as ",(0,r.kt)("strong",{parentName:"p"},"aliases"),", ",(0,r.kt)("strong",{parentName:"p"},"umask"),", etc.)."),(0,r.kt)("ol",{start:12},(0,r.kt)("li",{parentName:"ol"},"Issue the following linux command to ",(0,r.kt)("strong",{parentName:"li"},"restore")," your previous settings for your bashrc startup file:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mv ~/.bash_profile.bk ~/.bash_profile")),(0,r.kt)("p",null,'If you experience an error message "',(0,r.kt)("em",{parentName:"p"},"No such file or directory"),'", just ignore.'),(0,r.kt)("ol",{start:13},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Exit")," your current Bash shell session.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Login")," again to your matrix account."))),(0,r.kt)("p",null,"What did you notice this time?"),(0,r.kt)("h2",{id:"further-study"},"FURTHER STUDY"),(0,r.kt)("p",null,"I hope this series of tutorials have been helpful in teaching you basic Linux OS skills."),(0,r.kt)("p",null,"In order to get efficient in working in the Linux environment requires ",(0,r.kt)("strong",{parentName:"p"},"practice")," and ",(0,r.kt)("strong",{parentName:"p"},"applying"),"\nwhat you have learned to perform Linux operating system administration including:\n",(0,r.kt)("strong",{parentName:"p"},"user management"),", ",(0,r.kt)("strong",{parentName:"p"},"installing and removing applications"),", ",(0,r.kt)("strong",{parentName:"p"},"network services")," and ",(0,r.kt)("strong",{parentName:"p"},"network security"),"."),(0,r.kt)("p",null,"Although you are ",(0,r.kt)("strong",{parentName:"p"},"NOT")," required to perform ",(0,r.kt)("strong",{parentName:"p"},"Linux administration")," for this course,\nthere are useful ",(0,r.kt)("strong",{parentName:"p"},"course notes")," and ",(0,r.kt)("strong",{parentName:"p"},"TUTORIALS")," for advanced Linux server administration\nthat have been created for the Networking / Computer Support Specialist stream:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.cdot.senecacollege.ca/wiki/OPS245"},"OPS245: Basic Linux Server Administration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.cdot.senecacollege.ca/wiki/OPS335"},"OPS335: Advanced Linux Server Administration"))),(0,r.kt)("p",null,"Take care and good luck in your future endeavours ",(0,r.kt)("strong",{parentName:"p"},":)")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Murray Saul")),(0,r.kt)("h2",{id:"linux-practice-questions"},"LINUX PRACTICE QUESTIONS"),(0,r.kt)("p",null,"The purpose of this section is to obtain ",(0,r.kt)("strong",{parentName:"p"},"extra practice")," to help with ",(0,r.kt)("strong",{parentName:"p"},"quizzes"),", your ",(0,r.kt)("strong",{parentName:"p"},"midterm"),", and your ",(0,r.kt)("strong",{parentName:"p"},"final exam"),"."),(0,r.kt)("p",null,"Here is a link to the MS Word Document of ALL of the questions displayed below but with extra room to answer on the document to simulate a quiz:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ULI101/labs/blob/main/uli101_week12_practice.docx"},"https://github.com/ULI101/labs/blob/main/uli101_week12_practice.docx")),(0,r.kt)("p",null,"Your instructor may take-up these questions during class. It is up to the student to attend classes in order to obtain the answers to the following questions. Your instructor will NOT provide these answers in any other form (eg. e-mail, etc)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Review Questions:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Write code for a Bash shell script that clears the screen, and then prompts the user for their age. If the age entered is less than 65, then display a message that the person is NOT eligible to retire. If the age is equal to 65, then display a message that the person just turned 65 and can retire. If the age is greater than 65, then display the message that the user is over 65 and why have they not have already retired already?")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add code to the script created in the previous question to force the user to enter only an ",(0,r.kt)("strong",{parentName:"p"},"integer")," to provide error-checking for this shell script.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Write code for a Bash shell script that will prompt the user for a ",(0,r.kt)("strong",{parentName:"p"},"valid POSTAL CODE"),"."))),(0,r.kt)("p",null,"A valid postal code consists of the following format: ",(0,r.kt)("strong",{parentName:"p"},"x","#","x #x","#")),(0,r.kt)("p",null,"where ",(0,r.kt)("strong",{parentName:"p"},"x")," represents an upper or lowercase letter"),(0,r.kt)("p",null,"and ",(0,r.kt)("strong",{parentName:"p"},"#")," represents a number from 0-9"),(0,r.kt)("p",null,"Also VALID postal codes can consist of no spaces or one or more spaces in the format shown above."),(0,r.kt)("p",null,"If the user enters an ",(0,r.kt)("strong",{parentName:"p"},"INVALID postal code"),", indicate an error and allow the user to enter the VALID postal code. When the user enters a VALID postal code, then clear the screen and display the VALID postal code."),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Write code that works similar to the previous question, but have it read an input file called ",(0,r.kt)("strong",{parentName:"li"},"unchecked-postalcodes.txt")," and only save VALID postal codes to a file called:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"valid-postalcodes.txt")),(0,r.kt)("p",null,"Design your Bash Shell script to only run if the user enters TWO ARGUMENTS:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"unchecked-postalcodes.txt")," and ",(0,r.kt)("strong",{parentName:"p"},"valid-postalcodes.txt")),(0,r.kt)("p",null,"Otherwise, display an error message and immediately exit your Bash Shell script with a false exit value."),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"What is the purpose of the ",(0,r.kt)("strong",{parentName:"p"},"/etc/profile")," startup file?")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"What is the purpose of the ",(0,r.kt)("strong",{parentName:"p"},"/etc/bashrc")," startup file?")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"What is the purpose of the ",(0,r.kt)("strong",{parentName:"p"},"~/.bashrc")," startup file?")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"What is the purpose of the ",(0,r.kt)("strong",{parentName:"p"},"~/.bash_profile")," file?")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"What is the purpose of the ",(0,r.kt)("strong",{parentName:"p"},"~/.bash_logout")," file?")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Write code for the ",(0,r.kt)("strong",{parentName:"p"},"~/.bash_profile")," file below to clear the screen, welcome the user by their username, and display a list of all users currently logged into your Matrix server. Insert blank lines between each of those elements.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Write a command to run the recently created ",(0,r.kt)("strong",{parentName:"p"},"~/.bash_profile")," startup file from the previous question without exiting and re-logging into your Matrix account."))),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Author: Murray Saul"),(0,r.kt)("p",null,"License: LGPL version 3 Link: ",(0,r.kt)("a",{parentName:"p",href:"https://www.gnu.org/licenses/lgpl.html"},"https://www.gnu.org/licenses/lgpl.html")),(0,r.kt)("hr",null))}u.isMDXComponent=!0},7567:function(e,t,n){t.Z=n.p+"assets/images/If-elif-else-9c97420cf018b3e7bc63f5647ff0c646.png"},7895:function(e,t,n){t.Z=n.p+"assets/images/While-loop-5e6b124b44f0f2891ae7aa9b703a5cef.png"}}]);