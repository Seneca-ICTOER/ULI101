(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"b57d9bc89e617a005f2c805fd32c6249","url":"404.html"},{"revision":"0a1e987f9e63d853bf5cc58b1a8c0327","url":"A-Tutorials/test-file.html"},{"revision":"a852caec9e50f5cd89243f4b2b657a5d","url":"A-Tutorials/topic-file-3.html"},{"revision":"58a84460337f00202b4ce8f00b3767cb","url":"A-Tutorials/tutorial1.html"},{"revision":"2a699bfc8c9308b3476e2eafa1ab24e0","url":"A-Tutorials/tutorial1old.html"},{"revision":"4a30e0992a6a9401f7f666bf4fc5df74","url":"assets/css/styles.099fe1a9.css"},{"revision":"90cc7a189dd48f3f52800ec8c70d2287","url":"assets/js/0e384e19.276e7e13.js"},{"revision":"427b614620a6b3b618092572f6a0f126","url":"assets/js/131.55ccdb3d.js"},{"revision":"ac3ac9f8b0be3f50bffdc49c051b436b","url":"assets/js/17896441.90e94b77.js"},{"revision":"563c40b3b5edb8214f56f60d7f87da25","url":"assets/js/1be78505.441c278e.js"},{"revision":"d0e53239be38a3bd7513a499e45af4df","url":"assets/js/283.2101d8db.js"},{"revision":"a5f8235a0a834eb8e287d60adf17db31","url":"assets/js/398a85cb.57e4514f.js"},{"revision":"f93bf8130711d76fbf94295e82a754db","url":"assets/js/3b2d282e.8d409c2d.js"},{"revision":"0020ae26dcc0a28a0260d1ac5c4ec46a","url":"assets/js/492d2758.c6f17bdf.js"},{"revision":"6ec84ae4ca3353123e73af1e2f448950","url":"assets/js/539.cd0b8c95.js"},{"revision":"b4d25d7e767db8a449b0d2d586b3a44a","url":"assets/js/9044c6c5.294ca6b0.js"},{"revision":"9de76ef87a1554ce84227989e34ab9f4","url":"assets/js/9052009d.c1479918.js"},{"revision":"a931e5b1500bd4aeb06bff068d2586ab","url":"assets/js/935f2afb.0398af33.js"},{"revision":"48e91baaa60256a67c7e3596d694fb3f","url":"assets/js/972.f381ad13.js"},{"revision":"95f39093c18f53be7201efe258b0b4f2","url":"assets/js/ab6c343f.c968e681.js"},{"revision":"a33ca366aa747e73dcb9c9efcbae676d","url":"assets/js/be7c43a5.2307fe5b.js"},{"revision":"9b73c47e595193e191cb776e68c826fb","url":"assets/js/c42317e3.ee9e6ae9.js"},{"revision":"9e0c5a127c848f8fea1b37b802ac5f26","url":"assets/js/c72af190.169f0e40.js"},{"revision":"c805885dd18e172b839c1878547e628c","url":"assets/js/cedfcabd.74af91e5.js"},{"revision":"fcb50b840c38ad7c9079dcb714ab3b74","url":"assets/js/fe4211c1.3636d107.js"},{"revision":"75aa36908df0dd3d7bd3ac01d9fb0d23","url":"assets/js/main.eddf9e74.js"},{"revision":"aa7353ee2d0ecfadf85d6b4cffff3110","url":"assets/js/runtime~main.6e7be330.js"},{"revision":"5a675d365de566ff6981efa5c90cb36c","url":"B-SubSection2/topic-file-1.html"},{"revision":"3bbf8d78d53bacc57ded79b2171115be","url":"B-SubSection2/topic-file-2.html"},{"revision":"28bf1b7d2132cf7e6f48941d3b53164f","url":"B-SubSection2/topic-file-3.html"},{"revision":"f01cdc09f38ecf621c41f5ba6d9cd7ef","url":"C-SubSection3/topic-file-1.html"},{"revision":"e0f263aeabb17784e0a446dea1db91e4","url":"C-SubSection3/topic-file-2.html"},{"revision":"6cb9040502fef0375abc26e831dabaab","url":"C-SubSection3/topic-file-3.html"},{"revision":"7e3d69100588b320b5a6348e886775fb","url":"index.html"},{"revision":"2524df02c6e551be5aef857403777080","url":"manifest.json"},{"revision":"aa59fca3e1abd8839d9653fbe1f699e3","url":"assets/images/Apps-anywhere-b5126396f6bc2121bbd5952aba57aa2b.png"},{"revision":"c39e2c98947a879d0ff63642a511057a","url":"assets/images/Apps-anywhere-main-window-818cc3f75dfeb6b77a8bd94edbed4171.png"},{"revision":"2b562f630a6733c0363f440f7bdb7178","url":"assets/images/Cls-shell-b53c863fab6c2ab983b3aeef8d09e005.png"},{"revision":"4374775b8053fe3b375cc6b17241d3f1","url":"assets/images/Command-line-editing-51b3c63c53d95a6dc36dd3c6c53399ee.png"},{"revision":"34e8917e0be6b125b128c4323d9fc1f2","url":"assets/images/Ctrl-b-c4e4b2cf19d4fc6f562ccfb70ae154a7.png"},{"revision":"c5cae7b4dd0e5bfdd6b2c1ca6b5177c8","url":"assets/images/Ctrl-w-83dd35ccaf8d6bd054544d2bcf8d471f.png"},{"revision":"fa104bd8b397560a680340a912ceeaf6","url":"assets/images/Gp1-2f85ad14b74447b051971be4121399be.png"},{"revision":"f8f28b54f1e3f7f459e7838b87fd3fc6","url":"assets/images/Matrix-layout-66ca772ceeafcaea28505f4e97ba1350.png"},{"revision":"1ffa579064766692c00627c676398753","url":"assets/images/Meta-key-ae52a45733a36b4b4b1a65cfbead7944.png"},{"revision":"9232f3833b39c2f3189b6b05499dfc0d","url":"assets/images/New-ls-c7d0b6528a34d584011b566a4af349f4.png"},{"revision":"017c71b1e85d2e6572626d8d4515c4a1","url":"assets/images/Quick-connect-window-00d4b4524019e53223e0e35ce45ba28d.png"},{"revision":"c29afd649fd2331c8835acdcdd3b94bd","url":"assets/images/Script-check-1-f42b2324683996d54a151fc9c546e329.png"},{"revision":"2bbedba705abae1ef2ce0e0c5a89bd36","url":"assets/images/Script-check-2-240ef60da9014fbf78fbbb723eb13c7a.png"},{"revision":"894e283a64581300e2f5cbb3456b1039","url":"assets/images/Share-public-key-e43d930d91f8abaf87769b35b6678bce.png"},{"revision":"d708daaf75cd6503b70de3e3f0448f87","url":"assets/images/Ssh-authentication-response-1b08b1274d847cde20d851f1f5834577.png"},{"revision":"33638702737d85e4624c8adbee0852a1","url":"assets/images/Ssh-login-error-d5dd3a9267ee02b49010e5ebef5faa1e.png"},{"revision":"4baa863111ccde9f57a6cfb5194b6fe8","url":"assets/images/Ssh-main-window-8d99257b8a7e83bd9de8f74a76d4a7a8.png"},{"revision":"cb8a0d84527546d1e477e2a9cd834df8","url":"assets/images/Ssh-password-prompt-5c2ba9e8cd73143e12b01f9b35973d44.png"},{"revision":"15b822e449efbdf80903ace4b6a15e7e","url":"assets/images/Ssh-settings-window-567521ff3a8b6b0cf62d9817b9d0bc00.png"},{"revision":"72fa66579263057a2622fbdcc6c02a67","url":"assets/images/Ssh-shell-window-bb597197f216317836f16c8d73af8f43.png"},{"revision":"c39e2c98947a879d0ff63642a511057a","url":"img/Apps-anywhere-main-window.png"},{"revision":"aa59fca3e1abd8839d9653fbe1f699e3","url":"img/Apps-anywhere.png"},{"revision":"2b562f630a6733c0363f440f7bdb7178","url":"img/Cls-shell.png"},{"revision":"4374775b8053fe3b375cc6b17241d3f1","url":"img/Command-line-editing.png"},{"revision":"34e8917e0be6b125b128c4323d9fc1f2","url":"img/Ctrl-b.png"},{"revision":"c5cae7b4dd0e5bfdd6b2c1ca6b5177c8","url":"img/Ctrl-w.png"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"fa104bd8b397560a680340a912ceeaf6","url":"img/Gp1.png"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"f8f28b54f1e3f7f459e7838b87fd3fc6","url":"img/Matrix-layout.png"},{"revision":"1ffa579064766692c00627c676398753","url":"img/Meta-key.png"},{"revision":"9232f3833b39c2f3189b6b05499dfc0d","url":"img/New-ls.png"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"017c71b1e85d2e6572626d8d4515c4a1","url":"img/Quick-connect-window.png"},{"revision":"c29afd649fd2331c8835acdcdd3b94bd","url":"img/Script-check-1.png"},{"revision":"2bbedba705abae1ef2ce0e0c5a89bd36","url":"img/Script-check-2.png"},{"revision":"894e283a64581300e2f5cbb3456b1039","url":"img/Share-public-key.png"},{"revision":"d708daaf75cd6503b70de3e3f0448f87","url":"img/Ssh-authentication-response.png"},{"revision":"33638702737d85e4624c8adbee0852a1","url":"img/Ssh-login-error.png"},{"revision":"4baa863111ccde9f57a6cfb5194b6fe8","url":"img/Ssh-main-window.png"},{"revision":"cb8a0d84527546d1e477e2a9cd834df8","url":"img/Ssh-password-prompt.png"},{"revision":"15b822e449efbdf80903ace4b6a15e7e","url":"img/Ssh-settings-window.png"},{"revision":"72fa66579263057a2622fbdcc6c02a67","url":"img/Ssh-shell-window.png"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=new URL(e,self.location.href);return t.origin!==self.location.origin?[]:(t.search="",t.hash="",[t.href,`${t.href}${t.pathname.endsWith("/")?"":"/"}index.html`])}(a);for(const i of n){const r=s.getCacheKeyForURL(i);if(r){const s=caches.match(r);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:i,possibleURLs:n,cacheKey:r,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();